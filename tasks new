import React, { Component } from 'react';
const moment = require('moment')
import { connect } from 'react-redux';
import {Link} from 'react-router-dom';
import { fetchTasks, fetchEvents, fetchNotes, gotNextDay, gotPreviousDay, removeTask} from '../store';
import { Events, Notes} from './';

class SingleDay extends Component {

  constructor(props) {
    super(props);
    this.handleClick = this.handleClick.bind(this);
  }





  handleClick(event){
    event.preventDefault()
    let catId = event.target.id
    this.props.removingTask(catId)
    this.props.loadData(this.props.user.id)

  }


  
  render() {

    const {tasks, events, notes, day, previousDay, nextDay} = this.props
    const tasksOnDay = tasks.filter(function(task){
        return task.date === day
    })
    const eventsOnDay = events.filter(function(event){
        return event.date === day
    })
    const notesOnDay = notes.filter(function(note){
        return note.date === day
    })

    let tasksThings = tasksOnDay

    return (

      <div className="singlePage-container">

        <button onClick={previousDay}> Previous Day </button>
        <h2 className="singlePage-title"> {moment(day).format("dddd, MMMM Do YYYY")} </h2>
        <button onClick={nextDay}> Next Day </button>

        <div>
        <h3 className="singleName-headings">Tasks</h3>
        {tasksThings.map((task, idx) => (
            <div key={idx}>
                {task.status === 'complete' ?
                    <div >
                        <span  style={{ color: `${task.category.color.hex}` }}> &#x2613;</span>
                        <span> {task.name} </span>
                    </div> :
                    <div >
                        <span style={{ color: `${task.category.color.hex}` }}> &#x25CF;</span>
                        <span> {task.name}
                        </span><button id={task.id} onClick={this.handleClick} type='submit'>DELETE</button>

                    </div>
                }
            </div>
        ))}
    </div>
        <Link to={'/addtask'}>
          <button> Add Tasks </button>
        </Link>
        <h3 className="singleName-headings">Events</h3>
        <Events events={eventsOnDay} />
        <Link to={'/addevent'}>
        <button> Add Event </button>
        </Link>

        <Notes notes={notesOnDay} />
        <Link to={'/addnote'}>
          <button> Add Note </button>
        </Link>
      </div>
    )
  }
}

const mapState = (state) => ({
  user: state.user,
  tasks: state.tasks,
  events: state.events,
  notes: state.notes,
  day: state.day
});

const mapDispatch = (dispatch) => {
  return {
    loadData(userId) {
      dispatch(fetchTasks(userId));
      dispatch(fetchEvents(userId));
      dispatch(fetchNotes(userId));
    },
     nextDay() {
            dispatch(gotNextDay())
        },
    previousDay() {
            dispatch(gotPreviousDay())
    }, 
    removingTask(catId){
      dispatch(removeTask(catId));
    }
  };
}

export default connect(mapState, mapDispatch)(SingleDay);
